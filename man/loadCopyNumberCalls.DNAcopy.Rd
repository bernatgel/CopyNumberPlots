% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadCopyNumberCalls.DNAcopy.R
\name{loadCopyNumberCalls.DNAcopy}
\alias{loadCopyNumberCalls.DNAcopy}
\title{loadCopyNumberCalls.DNAcopy}
\usage{
loadCopyNumberCalls.DNAcopy(DNAcopy.data, chr.col = "chrom", start.col = "loc.start", end.col = "loc.end", segment.value.col = "seg.mean", chr.transformation = "23:X,24:Y,25:MT", genome = NULL, verbose = TRUE)
}
\arguments{
\item{DNAcopy.data}{The name of the file with the data}

\item{chr.col}{The name or number of the column with chromosome information. If NULL, it is automatically identified. (default to "chrom")}

\item{start.col}{The name or number of the column with start position information. If NULL, it is automatically identified. (default to "loc.start")}

\item{end.col}{The name or number of the column with end position information. If NULL, it is automatically identified. (default to "loc.end")}

\item{segment.value.col}{The name or number of the column with segment value. If NULL, it is automatically identified. (default to "seg.mean")}

\item{chr.transformation}{"23:X,24:Y,25:MT"}

\item{genome}{The name of the genome (default to NULL)}

\item{verbose}{Wether information messages should be generated. (default to TRUE)}
}
\value{
A GRanges object with a range per copy number segment
}
\description{
Loads copy number calls from a tabular format
}
\details{
This function will load segments data from any "bed-like" data structure
in R or file. Internally it uses the \code{toGRanges} function from regioneR
package and can work with any format accepted by it, including R objects
and local or remote files.
If no column names are specified, it will use simple heuristics to try to
identify the relevant data columns.
}
\examples{

library(DNAcopy)

data(coriell)
CNA.object <- CNA(cbind(coriell$Coriell.05296), coriell$Chromosome, coriell$Position, data.type="logratio",sampleid="c05296")

smoothed.CNA.object <- smooth.CNA(CNA.object)
segment.smoothed.CNA.object <- segment(smoothed.CNA.object, verbose=1)

DNAcopy.data <- segment.smoothed.CNA.object
loadCopyNumberCalls.DNAcopy(DNAcopy.data = DNAcopy.data)


}
