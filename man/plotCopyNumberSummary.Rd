% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotCopyNumberSummary.R
\name{plotCopyNumberSummary}
\alias{plotCopyNumberSummary}
\title{plotCopyNumberSummary}
\usage{
plotCopyNumberSummary(karyoplot, cn.calls, direction="in",  gain.color=NULL, normal.color=NULL, loss.color=NULL, add.grid=FALSE, grid.color="white", label="", lab.cex=1, lab.srt=0, pos=2, r0=0, r1=1, ...)
}
\arguments{
\item{karyoplot}{the karyoplot object}

\item{cn.calls}{(list) a LIST of cn.calls objects!}

\item{direction}{(defaults to "in")}

\item{gain.color}{(defaults to NULL)}

\item{normal.color}{(defaults to NULL)}

\item{loss.color}{(defaults to NULL)}

\item{add.grid}{(defaults to FALSE)}

\item{grid.color}{(defaults to "white")}

\item{label}{(defaults to "")}

\item{lab.cex}{(defaults to 1)}

\item{lab.srt}{(defaults to 0)}

\item{pos}{(defaults to 2)}

\item{r0}{(defaults to 0)}

\item{r1}{(defaults to 1)}

\item{...}{additional params}
}
\value{
Invisibly returns the karyoplot object representing the plot. With it
it is possible to add other elements to the plot using standrad karyoploteR
functions
}
\description{
Plot a summary of copy number status over a number of samples using a
histogram-like representation.
}
\details{
2 types of plots. Convergent or divergent barplots
}
\examples{


gg <- filterChromosomes(getGenome("hg19"))

all.scnas <- list()
for(i in seq_len(10)) {
  scnas <- createRandomRegions(40, 10e6, 10e6)
  scnas$cn <- floor(runif(40, 0, 4))
  scnas$loh <- ifelse(scnas$cn<2, 1, 0)
  normal.regs <- subtractRegions(gg, scnas)
  normal.regs$cn <- 2
  scnas <- sort(c(scnas, normal.regs))
  all.scnas[[paste0("samp", i)]] <- scnas
}

kp <- plotKaryotype("hg19", plot.type=4)
plotCopyNumberSummary(kp, all.scnas)

kp <- plotKaryotype("hg19", plot.type=4)
plotCopyNumberSummary(kp, all.scnas, gain.col="blue", loss.col="red", label="Copy Number", r0=0, r1=0.3, lab.srt=90, pos=3)
plotCopyNumberSummary(kp, all.scnas, direction="out", add.grid=TRUE, r0=0.35, r1=0.65)
plotCopyNumberSummary(kp, all.scnas, direction="out", r0=0.7, r1=1)
kpAxis(kp, ymin=0, ymax=10, r0=0.85, r1=1, tick.pos = c(0,5,10))
kpAxis(kp, ymin=0, ymax=10, r0=0.85, r1=0.7, tick.pos = c(5,10))


}
